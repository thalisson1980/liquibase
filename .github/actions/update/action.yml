name: Liquibase Update

inputs:
  URL:
    required: true
  PASSWORD:
    required: true
  USER:
    required: true
  DRIVER:
    required: false
  changelogFile:
    description: 'Name of the changelog file with extension'
    required: false

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      generateMatrix: ${{ steps.check-changelog.outputs.generateMatrix }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Check if changelogFile is empty
        id: check-changelog
        run: |
          if [[ -z "${{ inputs.changelogFile }}" ]]; then
            echo "::set-output name=generateMatrix::true"
          else
          echo "::set-output name=generateMatrix::false"
          fi
        shell: bash

      - name: Run update
        uses: liquibase-github-actions/update@v4.23.2
        if: steps.check-changelog.outputs.generateMatrix == 'false'
        with:
          changelogFile: ${{ inputs.changelogFile }}
          url: ${{ inputs.URL }}
          driver: ${{ inputs.DRIVER }}     
          password: ${{ inputs.PASSWORD }}
          username: ${{ inputs.USER }}
          logLevel: INFO


      - name: Generate Matrix
        id: set-matrix
        if: steps.check-changelog.outputs.generateMatrix == 'true'
        run: |
          # Generate the matrix in JSON format
          matrix_string="["
          first=true
          for file in $(find migrations -type f); do
            if [ "$first" = false ]; then
              matrix_string="${matrix_string},"
            fi
            matrix_string="${matrix_string}\"$file\""
            first=false
          done
          matrix_string="${matrix_string}]"
          echo "::set-output name=matrix::$matrix_string"
          echo "$matrix_string"
        shell: bash


  update_all:
    needs: update
    runs-on: ubuntu-latest
    if: needs.update.outputs.generateMatrix == 'true'
    strategy:
      matrix:
        files: ${{fromJson(needs.update.outputs.matrix)}}
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Run update
        uses: liquibase-github-actions/update@v4.23.2
        with:
          changelogFile: ${{ matrix.files }}
          url: ${{ inputs.URL }}
          driver: ${{ inputs.DRIVER }}     
          password: ${{ inputs.PASSWORD }}
          username: ${{ inputs.USER }}
          logLevel: INFO