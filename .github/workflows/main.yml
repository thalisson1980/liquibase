name: Liquibase Update

on:
    workflow_dispatch:

jobs:
  liquibase_update:
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v3
        - uses: liquibase-github-actions/update@v4.23.2
          with:
            # The root changelog
            # string
            # Required
            changelogFile: ${{ secrets.LB_DEVOPS_CHANGELOGFILE }}
        
            # The JDBC database connection URL
            # string
            # Required
            url: ${{ secrets.LB_DEVOPS_URL }}
        
            # Fully-qualified class which specifies a ChangeExecListener
            # string
            # Optional
            changeExecListenerClass: ""
        
            # Path to a properties file for the ChangeExecListenerClass
            # string
            # Optional
            changeExecListenerPropertiesFile: ""
        
            # Changeset contexts to match
            # string
            # Optional
            contextFilter: ""
        
            # The default catalog name to use for the database connection
            # string
            # Optional
            defaultCatalogName: ""
        
            # The default schema name to use for the database connection
            # string
            # Optional
            defaultSchemaName: ""
        
            # The JDBC driver class
            # string
            # Optional
            driver: ${{ secrets.LB_DEVOPS_DRIVER }}
        
            # The JDBC driver properties file
            # string
            # Optional
            driverPropertiesFile: ""
        
            # Changeset labels to match
            # string
            # Optional
            labelFilter: ""
        
            # Password to use to connect to the database
            # string
            # Optional
            password: ${{ secrets.LB_DEVOPS_PASSWORD }}
        
            # If set to true and any changeset in a deployment fails, then the update operation stops, and liquibase attempts to rollback all changesets just deployed. A changeset marked "fail-on-error=false" does not trigger as an error, therefore rollback-on-error will not occur. Additionally, if a changeset is not auto-rollback compliant or does not have a rollback script, then no rollback-on-error will occur for any changeset.
            # bool
            # Optional
            rollbackOnError: ""
        
            # Type of update results summary to show.  Values can be "off", "summary", or "verbose".
            # string
            # Optional
            showSummary: ""
        
            # Username to use to connect to the database
            # string
            # Optional
            username: ${{ secrets.LB_DEVOPS_USER }}
        
            logLevel: INFO
        
  liquibase_update_all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List changelog files
        run: |
          changelog_folder="migrations"
          for file in $changelog_folder/*.xml; do
            echo "Found changelog file: $file"
            # Run the Liquibase update action for each changelog file
            echo "::set-output name=changelogFile::$file"
          done
        id: list_changelogs

      - name: Run Liquibase updates
        run: |
          changelog_files=($(echo "${{ steps.list_changelogs.outputs.changelogFile }}" | tr '\n' ' '))
          for changelog_file in "${changelog_files[@]}"; do
            echo "Running Liquibase update for $changelog_file"
            
            # Run the Liquibase update action for each changelog file
            # You can adjust the action's input parameters as needed
            docker run --rm -v "$(pwd):/liquibase" liquibase/liquibase \
              --changeLogFile="$changelog_file" \
              --url="${{ secrets.LB_DEVOPS_URL }}" \
              --driver="${{ secrets.LB_DEVOPS_DRIVER }}" \
              --username="${{ secrets.LB_DEVOPS_USER }}" \
              --password="${{ secrets.LB_DEVOPS_PASSWORD }}" \
              update
          done
